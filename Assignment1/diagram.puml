@startuml
interface BasicAccount {
    +name(): String
    +balance(): double
}

interface WithdrawableAccount extends BasicAccount {
    +withdraw(double amount): double
}

interface DepositableAccount extends BasicAccount {
    +deposit(double amount): double
}

interface InterestableAccount extends BasicAccount {
    +computeInterest(): double
}

interface FullFunctionalAccount extends WithdrawableAccount, DepositableAccount, InterestableAccount {
}

abstract class Account {
    #accountName: String
    #accountBalance: double
    #accountInterestRate: double
    #openDate: Date
    #lastInterestDate: Date

    +Account (String, double)
    +Account (String, double, Date)

    +name(): String
    +balance(): double
    +deposit(double): double
    +withdraw(double): double
    +withdraw(double, Date): double
}

class CheckingAccount extends Account implements FullFunctionalAccount {
    +CheckingAccount(String, double)
    +CheckingAccount(String, double, Date)

    +withdraw(double, Date): double
}

class SavingAccount extends Account implements FullFunctionalAccount {
    +SavingAccount(String, double)
    +SavingAccount(String, double, Date)

    -transactionCount: int
    -lastTransactionDate: Date
    -transactionFee: int

    +withdraw(double, Date): double
    +computeInterest(Date): double
    -processTransaction(): void
    -processTransaction(Date): void
    -isNewMonth(): boolean
}

class CDAccount extends Account implements FullFunctionalAccount {
    -duration: long
    +CDAccount(String, double)
    +CDAccount(String, double, Date)

    +withdraw(double, Date): double
    +deposit(double): double
    +computeInterest(Date): double
    +afterDuration(): boolean
}

class LoanAccount extends SavingAccount {
    +LoanAccount(String, double)
    +LoanAccount(String, double, Date)

    +double withdraw(double)
    +double deposit(double)
}

class Time {
    {static} +day: long
    {static} +month: long
    {static} +year: long
}

class Year {
    {static} +day: int
    {static} +month: int
    {static} +year: int
}
@enduml